//
//  HomeMiddleware.swift
//  SwiftUIAndReduxExample
//
//  Created by ÈÖí‰∫ïÊñá‰πü on 2021/10/17.
//

import Foundation

// üëâ Ë¶ÅÁ¥†Ë°®Á§∫„ÅßÂà©Áî®„Åô„Çã„É¨„Çπ„Éù„É≥„Çπ„Çí„Åæ„Å®„ÇÅ„Çã„Åü„ÇÅ„ÅÆtypealias
// ‚Äª convertHomeSectionResponse(homeResponses: [HomeResponse])„ÅÆÊàª„ÇäÂÄ§
typealias HomeSectionResponse = (
    campaignBannersResponse: CampaignBannersResponse,
    recentNewsResponse: RecentNewsResponse,
    featuredTopicsResponse: FeaturedTopicsResponse,
    trendArticleResponse: TrendArticleResponse,
    pickupPhotoResponse: PickupPhotoResponse
)

// API„É™„ÇØ„Ç®„Çπ„ÉàÁµêÊûú„Å´Âøú„Åò„ÅüAction„ÇíÁô∫Ë°å„Åô„Çã
// ‚Äª„ÉÜ„Çπ„Éà„Ç≥„Éº„Éâ„ÅÆÂ†¥Âêà„ÅØÊ§úË®ºÁî®„ÅÆhomeMiddleware„ÅÆ„ÇÇ„ÅÆ„Å´Â∑Æ„ÅóÊõø„Åà„ÇãÊÉ≥ÂÆö
func homeMiddleware() -> Middleware<AppState> {
    return { state, action, dispatch in
        switch action {
            case let action as RequestHomeAction:
            // üëâ RequestHomeAction„ÇíÂèó„ÅëÂèñ„Å£„Åü„Çâ„Åù„ÅÆÂæå„Å´API„É™„ÇØ„Ç®„Çπ„ÉàÂá¶ÁêÜ„ÇíÂÆüË°å„Åô„Çã
            requestHomeSections(action: action, dispatch: dispatch)
            default:
                break
        }
    }
}

// üëâ API„É™„ÇØ„Ç®„Çπ„ÉàÂá¶ÁêÜ„ÇíÂÆüË°å„Åô„Çã„Åü„ÇÅ„ÅÆ„É°„ÇΩ„ÉÉ„Éâ
// ‚Äª„ÉÜ„Çπ„Éà„Ç≥„Éº„Éâ„ÅÆÂ†¥Âêà„ÅØÊÉ≥ÂÆö„Åô„ÇãStub„Éá„Éº„Çø„ÇíËøî„Åô„ÇÇ„ÅÆ„Å´Â∑Æ„ÅóÊõø„Åà„ÇãÊÉ≥ÂÆö
private func requestHomeSections(action: RequestHomeAction, dispatch: @escaping Dispatcher) {
    Task { @MainActor in
        do {
            let homeResponses = try await HomeRepositoryFactory.create().getHomeResponses()
            let homeSectionResponses = try convertHomeSectionResponse(homeResponses: homeResponses)
            // „ÅäÊúõ„Åø„ÅÆ„É¨„Çπ„Éù„É≥„Çπ„ÅåÂèñÂæó„Åß„Åç„ÅüÂ†¥Âêà„ÅØÊàêÂäüÊôÇ„ÅÆAction„ÇíÁô∫Ë°å„Åô„Çã
            dispatch(
                SuccessHomeAction(
                    campaignBannerEntities: homeSectionResponses.campaignBannersResponse.result,
                    recentNewsEntities: homeSectionResponses.recentNewsResponse.result,
                    featuredTopicEntities: homeSectionResponses.featuredTopicsResponse.result,
                    trendArticleEntities: homeSectionResponses.trendArticleResponse.result,
                    pickupPhotoEntities: homeSectionResponses.pickupPhotoResponse.result
                )
            )
            dump(homeResponses)
        } catch APIError.error(let message) {
            // ÈÄö‰ø°„Ç®„É©„Éº„Å™„ÅÑ„Åó„ÅØ„ÅäÊúõ„Åø„ÅÆ„É¨„Çπ„Éù„É≥„Çπ„ÅåÂèñÂæó„Åß„Åç„Å™„Åã„Å£„ÅüÂ†¥Âêà„ÅØÊàêÂäüÊôÇ„ÅÆAction„ÇíÁô∫Ë°å„Åô„Çã
            dispatch(FailureHomeAction())
            print(message)
        }
    }
}

private func convertHomeSectionResponse(homeResponses: [HomeResponse]) throws -> HomeSectionResponse {
    var campaignBannersResponse: CampaignBannersResponse?
    var recentNewsResponse: RecentNewsResponse?
    var featuredTopicsResponse: FeaturedTopicsResponse?
    var trendArticleResponse: TrendArticleResponse?
    var pickupPhotoResponse: PickupPhotoResponse?
    // HomeResponse„ÅÆ‰∏≠„Åã„ÇâË©≤ÂΩì„Åô„Çã„É¨„Çπ„Éù„É≥„Çπ„ÇíÂèñ„ÇäÂá∫„Åô
    for homeResponse in homeResponses {
        if let targetCampaignBannersResponse = homeResponse as? CampaignBannersResponse {
            campaignBannersResponse = targetCampaignBannersResponse
        }
        if let targetRecentNewsResponse = homeResponse as? RecentNewsResponse {
            recentNewsResponse = targetRecentNewsResponse
        }
        if let targetFeaturedTopicsResponse = homeResponse as? FeaturedTopicsResponse {
            featuredTopicsResponse = targetFeaturedTopicsResponse
        }
        if let targetTrendArticleResponse = homeResponse as? TrendArticleResponse {
            trendArticleResponse = targetTrendArticleResponse
        }
        if let targetPickupPhotoResponse = homeResponse as? PickupPhotoResponse {
            pickupPhotoResponse = targetPickupPhotoResponse
        }
    }
    // MEMO: „Å©„Çå„Åã1„Å§„ÅÆ„É¨„Çπ„Éù„É≥„Çπ„Åß„ÇÇÊ¨†„Åë„Å¶„ÅÑ„ÇãÊßò„Å™Áä∂ÊÖã„Å™„Çâ„Å∞APIError„Å®„Åó„Å¶Âèñ„ÇäÊâ±„ÅÜ
    guard let campaignBannersResponse = campaignBannersResponse,
          let recentNewsResponse = recentNewsResponse,
          let featuredTopicsResponse = featuredTopicsResponse,
          let trendArticleResponse = trendArticleResponse,
          let pickupPhotoResponse = pickupPhotoResponse else {
        throw APIError.error(message: "No HomeSectionResponse exists.")
    }
    return HomeSectionResponse(
        campaignBannersResponse: campaignBannersResponse,
        recentNewsResponse: recentNewsResponse,
        featuredTopicsResponse: featuredTopicsResponse,
        trendArticleResponse: trendArticleResponse,
        pickupPhotoResponse: pickupPhotoResponse
    )
}
